"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9549],{4134:(e,t,r)=>{r.d(t,{Z:()=>m});var n=r(7294),a=r(7462);const l={red:["#f56565","#ed64a6","#ffffff"],green:["#48bb78","#38a169","#ffffff"],lime:["#68d391","#4fd1c5","#ffffff"],purple:["#805ad5","#667eea","#ffffff"],blue:["#4299e1","#63b3ed","#ffffff"],gray:["#718096","#a0aec0","#ffffff"],white:["#ffffff","#ffffff","#2d3748"],black:["#2d3748","#2d3748","#ffffff"],yellow:["#f6e05e","#ecc94b","#ffffff"],orange:["#f6ad55","#ed8936","#ffffff"],pink:["#ed64a6","#f56565","#ffffff"]},o={flow:"white",number:"green",float:"green",integer:"lime",boolean:"red",string:"purple",object:"yellow",list:"orange"},i={Event:"red",Logic:"green",Variable:"purple",Query:"purple",Action:"blue",Flow:"gray",Time:"gray",None:"gray"};function c(e){let{title:t,category:r="None",children:a}=e,o=i[r];void 0===o&&(o="red");let[c,p,d]=l[o];return n.createElement("div",{style:{borderRadius:"0.25rem",color:"white",fontSize:"0.75rem",backgroundColor:"#2d3748",minWidth:"120px",width:"fit-content"}},n.createElement("div",{style:{backgroundColor:c,color:d,padding:"0.25rem 0.5rem",borderTopLeftRadius:"0.25rem",borderTopRightRadius:"0.25rem"}},t),n.createElement("div",{style:{display:"flex",flexDirection:"column",gap:"0.5rem",padding:"0.5rem 0",borderLeft:"1px solid",borderRight:"1px solid",borderBottom:"1px solid",borderColor:p}},a))}var p=r(1954);const d={position:"absolute",top:0,left:0,visibility:"hidden",height:0,width:"auto",whiteSpace:"pre"},f=e=>{let{minWidth:t=30,...r}=e;const l=(0,n.useRef)(null),o=(0,n.useRef)(null),[i,c]=(0,n.useState)({}),p=(0,n.useCallback)((e=>{if(e){const t=window.getComputedStyle(e);c({fontSize:t.getPropertyValue("font-size"),paddingLeft:t.getPropertyValue("padding-left"),paddingRight:t.getPropertyValue("padding-right")})}l.current=e}),[]);return(0,n.useEffect)((()=>{if(null===o.current)return;if(null===l.current)return;const e=o.current.clientWidth;l.current.style.width=Math.max(t,e)+"px"}),[r.value,t,i]),n.createElement(n.Fragment,null,n.createElement("input",(0,a.Z)({ref:p},r)),n.createElement("span",{ref:o,style:{...d,...i}},r.value))};function u(e){let{value:t,onChange:r,name:a,valueType:i,defaultValue:c}=e;const d="flow"===i;let u=o[i];void 0===u&&(u="red");const[s,g]=l[u],m=!1===d||"flow"!==a;return n.createElement("div",{style:{display:"flex",flexGrow:1,alignItems:"center",justifyContent:"start",height:"7px"}},d&&n.createElement(p.JO,{style:{color:"#ffffff",fontSize:".75rem"},icon:"mdi:chevron-right"}),!d&&n.createElement(p.JO,{style:{color:g,fontSize:".75rem",marginRight:"2px"},icon:"mdi:circle-outline"}),m&&n.createElement("div",{style:{textTransform:"capitalize",marginRight:"2px"}},a),!1===d&&n.createElement(n.Fragment,null,"string"===i&&n.createElement(f,{type:"text",style:{backgroundColor:"#6b7280",color:"#ffffff",padding:"1px 2px",border:"none",borderRadius:"4px"},value:String(t)??c??"",onChange:e=>r(a,e.currentTarget.value)}),"number"===i&&n.createElement(f,{type:"number",style:{backgroundColor:"#6b7280",color:"#ffffff",padding:"1px 2px",border:"none",borderRadius:"4px"},value:String(t)??c??"",onChange:e=>r(a,e.currentTarget.value)}),"float"===i&&n.createElement(f,{type:"number",style:{backgroundColor:"#6b7280",color:"#ffffff",padding:"1px 2px",border:"none",borderRadius:"4px"},value:String(t)??c??"",onChange:e=>r(a,e.currentTarget.value)}),"integer"===i&&n.createElement(f,{type:"number",style:{backgroundColor:"#6b7280",color:"#ffffff",padding:"1px 2px",border:"none",borderRadius:"4px"},value:String(t)??c??"",onChange:e=>r(a,e.currentTarget.value)}),"boolean"===i&&n.createElement("input",{type:"checkbox",style:{backgroundColor:"#6b7280",color:"#ffffff",padding:"1px 2px",border:"none",borderRadius:"4px"},value:String(t)??c??"",onChange:e=>r(a,e.currentTarget.checked)})))}function s(e){let{valueType:t,name:r}=e;const a="flow"===t;let i=o[t];void 0===i&&(i="red");const[c,d]=l[i],f=!1===a||"flow"!==r;return n.createElement("div",{style:{display:"flex",flexGrow:1,alignItems:"center",justifyContent:"end",height:"7px"}},f&&n.createElement("div",{style:{textTransform:"capitalize",marginRight:"2px"}},r),a&&n.createElement(p.JO,{style:{color:"#ffffff",fontSize:".75rem"},icon:"mdi:chevron-right"}),!a&&n.createElement(p.JO,{style:{color:d,fontSize:".75rem"},icon:"mdi:circle-outline"}))}const g=e=>{let{spec:t}=e;const r=((e,t)=>{const r=Math.max(e.length,t.length),n=[];for(let a=0;a<r;a++){const r=[e[a],t[a]];n.push(r)}return n})(t.inputs,t.outputs);return n.createElement(c,{title:t.label,category:t.category},r.map(((e,t)=>{let[r,l]=e;return n.createElement("div",{key:t,style:{display:"flex",flexDirection:"row",justifyContent:"space-between",gap:"0.5rem",padding:"0.5rem",position:"relative"}},r&&n.createElement(u,(0,a.Z)({},r,{value:r.defaultValue})),l&&n.createElement(s,l))})))},m=e=>{let{description:t,inputs:r,outputs:a,spec:l}=e;return n.createElement("div",{style:{background:"rgb(30, 31, 34)",backgroundImage:"linear-gradient(rgb(37,38,40) .1em, transparent .1em), linear-gradient(90deg, rgb(37,38,40) .1em, transparent .1em)",backgroundSize:"1em 1em",padding:"2em",width:"fit-content"}},n.createElement(g,{spec:l}))}},6533:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var n=r(7462),a=(r(7294),r(3905)),l=r(4134);const o={},i="logic/mergeDeep/object",c={unversionedId:"profiles/Struct/Nodes/logic/merge-deep/object",id:"profiles/Struct/Nodes/logic/merge-deep/object",title:"logic/mergeDeep/object",description:"Creates a new object with the own properties of the first object merged with the own properties of the second object. If a key exists in both objects:",source:"@site/docs/profiles/Struct/Nodes/logic/merge-deep/object.mdx",sourceDirName:"profiles/Struct/Nodes/logic/merge-deep",slug:"/profiles/Struct/Nodes/logic/merge-deep/object",permalink:"/behave-graph-struct/docs/profiles/Struct/Nodes/logic/merge-deep/object",draft:!1,editUrl:"https://github.com/aitorllj93/behave-graph-struct/tree/main/website/docs/profiles/Struct/Nodes/logic/merge-deep/object.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"MergeDeep",permalink:"/behave-graph-struct/docs/category/mergedeep"},next:{title:"logic/object",permalink:"/behave-graph-struct/docs/profiles/Struct/Nodes/logic/object"}},p={},d=[{value:"Inputs",id:"inputs",level:2},{value:"Outputs",id:"outputs",level:2}],f={toc:d};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"logicmergedeepobject"},"logic/mergeDeep/object"),(0,a.kt)("p",null,"  Creates a new object with the own properties of the first object merged with the own properties of the second object. If a key exists in both objects:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"and both values are objects, the two values will be recursively merged"),(0,a.kt)("li",{parentName:"ul"},"otherwise the value from the second object will be used.")),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"https://selfrefactor.github.io/rambdax/#/?id=mergeDeepRight"},"Rambdax's mergeDeepRight")),(0,a.kt)(l.Z,{description:{typeName:"logic/mergeDeep/object",category:"Logic",label:"Merge Deep",otherTypeNames:[],helpDescription:"\n  Creates a new object with the own properties of the first object merged with the own properties of the second object. If a key exists in both objects:\n\n* and both values are objects, the two values will be recursively merged\n* otherwise the value from the second object will be used.\n  \nSee [Rambdax's mergeDeepRight](https://selfrefactor.github.io/rambdax/#/?id=mergeDeepRight)\n  ",configuration:{}},inputs:[{valueTypeName:"object",name:"a",valueChoices:[],links:[]},{valueTypeName:"object",name:"b",valueChoices:[],links:[]}],outputs:[{valueTypeName:"object",name:"result",valueChoices:[],links:[]}],spec:{type:"logic/mergeDeep/object",category:"Logic",label:"Merge Deep",inputs:[{name:"a",valueType:"object",defaultValue:"[]"},{name:"b",valueType:"object",defaultValue:"[]"}],outputs:[{name:"result",valueType:"object"}],configuration:[]},mdxType:"NodePreview"}),(0,a.kt)("h2",{id:"inputs"},"Inputs"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,a.kt)("th",{parentName:"tr",align:null},"Choices"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"a"),(0,a.kt)("td",{parentName:"tr",align:null},"object"),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"b"),(0,a.kt)("td",{parentName:"tr",align:null},"object"),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null})))),(0,a.kt)("h2",{id:"outputs"},"Outputs"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"result"),(0,a.kt)("td",{parentName:"tr",align:null},"object")))))}u.isMDXComponent=!0}}]);
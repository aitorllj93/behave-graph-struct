"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5656],{93525:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var t=a(87462),i=(a(67294),a(3905));const l={},r="Initial Value",s={unversionedId:"examples/core/variables/InitialValue",id:"examples/core/variables/InitialValue",title:"Initial Value",description:"",source:"@site/docs/examples/core/variables/InitialValue.mdx",sourceDirName:"examples/core/variables",slug:"/examples/core/variables/InitialValue",permalink:"/behave-graph-struct/docs/examples/core/variables/InitialValue",draft:!1,editUrl:"https://github.com/aitorllj93/behave-graph-struct/tree/main/website/docs/examples/core/variables/InitialValue.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Frame Counter",permalink:"/behave-graph-struct/docs/examples/core/variables/FrameCounter"},next:{title:"Set Get",permalink:"/behave-graph-struct/docs/examples/core/variables/SetGet"}},o={},c=[],u={toc:c};function p(e){let{components:n,...a}=e;return(0,i.kt)("wrapper",(0,t.Z)({},u,a,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"initial-value"},"Initial Value"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "variables": [\n    {\n      "valueTypeName": "float",\n      "name": "counter",\n      "id": 0,\n      "initialValue": 3.14156\n    }\n  ],\n  "nodes": [\n    {\n      "type": "lifecycle/onStart",\n      "id": "0",\n      "flows": {\n        "flow": {\n          "nodeId": "3",\n          "socket": "flow"\n        }\n      }\n    },\n    {\n      "type": "variable/get",\n      "configuration": {\n        "variableId": 0\n      },\n      "id": "1"\n    },\n    {\n      "type": "math/toString/float",\n      "id": "2",\n      "parameters": {\n        "a": {\n          "link": {\n            "nodeId": "1",\n            "socket": "value"\n          }\n        }\n      }\n    },\n    {\n      "type": "debug/log",\n      "id": "3",\n      "parameters": {\n        "text": {\n          "link": {\n            "nodeId": "2",\n            "socket": "result"\n          }\n        }\n      }\n    }\n  ]\n}\n\n')))}p.isMDXComponent=!0}}]);
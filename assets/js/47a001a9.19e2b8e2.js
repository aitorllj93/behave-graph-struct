"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3431],{68391:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>u,toc:()=>i});var l=a(87462),r=(a(67294),a(3905)),n=a(78978);const o={},s="math/lessThanOrEqual/float",u={unversionedId:"profiles/Core/Nodes/math/less-than-or-equal/float",id:"profiles/Core/Nodes/math/less-than-or-equal/float",title:"math/lessThanOrEqual/float",description:"\u2264",source:"@site/docs/profiles/Core/Nodes/math/less-than-or-equal/float.mdx",sourceDirName:"profiles/Core/Nodes/math/less-than-or-equal",slug:"/profiles/Core/Nodes/math/less-than-or-equal/float",permalink:"/behave-graph-struct/docs/profiles/Core/Nodes/math/less-than-or-equal/float",draft:!1,editUrl:"https://github.com/aitorllj93/behave-graph-struct/tree/main/website/docs/profiles/Core/Nodes/math/less-than-or-equal/float.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"LessThanOrEqual",permalink:"/behave-graph-struct/docs/category/lessthanorequal"},next:{title:"math/lessThanOrEqual/integer",permalink:"/behave-graph-struct/docs/profiles/Core/Nodes/math/less-than-or-equal/integer"}},p={},i=[{value:"Inputs",id:"inputs",level:2},{value:"Outputs",id:"outputs",level:2}],m={toc:i};function h(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,l.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"mathlessthanorequalfloat"},"math/lessThanOrEqual/float"),(0,r.kt)("p",null,"\u2264"),(0,r.kt)(n.Z,{description:{typeName:"math/lessThanOrEqual/float",category:"Logic",label:"\u2264",otherTypeNames:[],helpDescription:"",configuration:{}},inputs:[{valueTypeName:"float",name:"a",valueChoices:[],links:[]},{valueTypeName:"float",name:"b",valueChoices:[],links:[]}],outputs:[{valueTypeName:"boolean",name:"result",valueChoices:[],links:[]}],spec:{type:"math/lessThanOrEqual/float",category:"Logic",label:"\u2264",inputs:[{name:"a",valueType:"float",defaultValue:0},{name:"b",valueType:"float",defaultValue:0}],outputs:[{name:"result",valueType:"boolean"}],configuration:[]},mdxType:"NodePreview"}),(0,r.kt)("h2",{id:"inputs"},"Inputs"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Choices"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"a"),(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"b"),(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h2",{id:"outputs"},"Outputs"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"result"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean")))))}h.isMDXComponent=!0}}]);
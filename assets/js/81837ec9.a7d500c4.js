"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9949],{37846:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>c,frontMatter:()=>u,metadata:()=>p,toc:()=>s});var l=a(87462),r=(a(67294),a(3905)),n=a(78978);const u={},o="debug/expectTrue",p={unversionedId:"profiles/Core/Nodes/debug/expect-true",id:"profiles/Core/Nodes/debug/expect-true",title:"debug/expectTrue",description:"Assert Expect True",source:"@site/docs/profiles/Core/Nodes/debug/expect-true.mdx",sourceDirName:"profiles/Core/Nodes/debug",slug:"/profiles/Core/Nodes/debug/expect-true",permalink:"/behave-graph-struct/docs/profiles/Core/Nodes/debug/expect-true",draft:!1,editUrl:"https://github.com/aitorllj93/behave-graph-struct/tree/main/website/docs/profiles/Core/Nodes/debug/expect-true.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Debug",permalink:"/behave-graph-struct/docs/category/debug"},next:{title:"debug/log",permalink:"/behave-graph-struct/docs/profiles/Core/Nodes/debug/log"}},i={},s=[{value:"Inputs",id:"inputs",level:2},{value:"Outputs",id:"outputs",level:2}],d={toc:s};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,l.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"debugexpecttrue"},"debug/expectTrue"),(0,r.kt)("p",null,"Assert Expect True"),(0,r.kt)(n.Z,{description:{typeName:"debug/expectTrue",category:"Action",label:"Assert Expect True",otherTypeNames:[],helpDescription:"",configuration:{}},inputs:[{valueTypeName:"flow",name:"flow",valueChoices:[],links:[]},{valueTypeName:"boolean",name:"condition",valueChoices:[],links:[]},{valueTypeName:"string",name:"description",valueChoices:[],links:[]}],outputs:[{valueTypeName:"flow",name:"flow",valueChoices:[],links:[]}],spec:{type:"debug/expectTrue",category:"Action",label:"Assert Expect True",inputs:[{name:"flow",valueType:"flow"},{name:"condition",valueType:"boolean",defaultValue:!1},{name:"description",valueType:"string",defaultValue:""}],outputs:[{name:"flow",valueType:"flow"}],configuration:[]},mdxType:"NodePreview"}),(0,r.kt)("h2",{id:"inputs"},"Inputs"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Choices"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"flow"),(0,r.kt)("td",{parentName:"tr",align:null},"flow"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"condition"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"description"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h2",{id:"outputs"},"Outputs"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"flow"),(0,r.kt)("td",{parentName:"tr",align:null},"flow")))))}c.isMDXComponent=!0}}]);
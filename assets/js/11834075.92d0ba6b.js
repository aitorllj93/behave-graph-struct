"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2129],{36732:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>g,frontMatter:()=>n,metadata:()=>a,toc:()=>c});var s=r(87462),i=(r(67294),r(3905));const n={sidebar_position:2},o="Profiles",a={unversionedId:"core-concepts/profiles",id:"core-concepts/profiles",title:"Profiles",description:"A profile is a function that updates the registry with the nodes and value types that are available in the system. The profile usually also includes the Abstractions that are required for the nodes to work as parameters.",source:"@site/docs/core-concepts/profiles.md",sourceDirName:"core-concepts",slug:"/core-concepts/profiles",permalink:"/behave-graph-struct/docs/core-concepts/profiles",draft:!1,editUrl:"https://github.com/aitorllj93/behave-graph-struct/tree/main/website/docs/core-concepts/profiles.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Registry",permalink:"/behave-graph-struct/docs/core-concepts/registry"},next:{title:"Values",permalink:"/behave-graph-struct/docs/core-concepts/values"}},l={},c=[{value:"Using official Profiles",id:"using-official-profiles",level:2},{value:"Creating a Custom Profile",id:"creating-a-custom-profile",level:2}],p={toc:c};function g(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,s.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"profiles"},"Profiles"),(0,i.kt)("p",null,"A profile is a function that updates the registry with the nodes and value types that are available in the system. The profile usually also includes the ",(0,i.kt)("a",{parentName:"p",href:"./abstractions"},"Abstractions")," that are required for the nodes to work as parameters."),(0,i.kt)("h2",{id:"using-official-profiles"},"Using official Profiles"),(0,i.kt)("p",null,"The official profiles are available in the ",(0,i.kt)("inlineCode",{parentName:"p"},"@behave-graph/core")," package."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import {\n  DefaultLogger,\n  DummyScene,\n  ManualLifecycleEventEmitter,\n  Registry,\n  registerCoreProfile,\n  registerSceneProfile,\n} from '@behave-graph/core';\n\nconst registry = new Registry();\nconst logger = new DefaultLogger();\nconst lifecycleEventEmitter = new ManualLifecycleEventEmitter();\nconst scene = new DummyScene();\n\nregisterCoreProfile(registry, logger, lifecycleEventEmitter);\nregisterSceneProfile(registry, scene);\n")),(0,i.kt)("h2",{id:"creating-a-custom-profile"},"Creating a Custom Profile"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { Registry, ILogger } from '@behave-graph/core';\n\nconst registerMyProfile = (\n  registry: Registry,\n  logger: ILogger,\n) => {\n  const { nodes, values } = registry;\n\n  // Register nodes\n  nodes.register(MyNodeDescription);\n  nodes.register(MyNodeWithDependenciesDescription(logger));\n    \n  // Register value types\n  values.register(MyValueTypeDescription);\n\n  return registry;\n};\n")))}g.isMDXComponent=!0}}]);